{"version":3,"sources":["woo-feed-admin.js"],"names":["_defineProperties","target","props","descriptor","i","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","window","wpAjax","$","document","opts","self","prop","status","addClass","removeClass","hasClass","currentTarget","clearTooltip","userAgent","actionMsg","match","actionKey","index","join","removeAttr","elem","attr","msg","extend","_default","_args","valueField","$copyBtn","feedGenerator","this","on","ClipboardJS","event","action","showTooltip","trigger","test","navigator","ajax_fail","alert","facebookCategories","url","data","_classCallCheck","WooFeedCustomFields","productCustomFields","field","isTaxonomy","value","ajax","nonce","method","response","wpf_ajax_obj","wpf_ajax_url","success","_this","cacheClear","closest","find","hide","selectize","WooFeedFeedCategories","options","render","send","type","item","_ajax_nonce","then","fail","helper","labelField","placeholder","searchField","escape","concat","text","in_array","needle","haystack","indexOf","sortable","onDrop","column_count","warn","wf_sortable","containerSelector","e","hasOwnProperty","error","statusText","el","config","column","_onDrop","each","length","itemPath","itemSelector","create","plugins","$item","container","group","draggedClass","bodyClass","selectize_render_item","fancySelect","maxItemShow","split","map","s","not","handle","reindex_config_table","init","renderMerchantInfo","form","common","jQuery","k","opt","merchantInfo","feedType","r","types","html","t","trim","toLowerCase","na","disabled","val","_loop2","contentSettings","feedForm","feedEditor","is","merchantInfoCache","tooltip","css","top","_regenerate","isRegenerating","title","_current_btn","feed","_limit","generator","limit","_progress","_timer","_product_ids","_progress_per_batch","_refresh","mousemove","_feed","pageX","generate","replace","clip","fallbackMessage","condition","URLSearchParams","_color","preventDefault","parent","_log","regenerate","_all_btn","current_page_query","page_name","_block_button","_current_btn_label","message","product","setTimeout","_this2","_stopProgressBar","_process_batch","_updateProgressStatus","_current_batch","_total_batch","post","_save_feed_file","loop","_unblock_button","_resetProgressBar","console","refreshInterval","arguments","undefined","clearInterval","setInterval","_updateProgressBar","update","_toggleProgressBar","table","show","color","width","pagenow","attr_name","hover","renderMerchantTemplate","_loop","appendTo","remove","clipboard","confirm","href","slideToggle","loader","reload","button","status_area","select","execCommand","current_attribute_value","fancyOption","fancyDataPicker","selectIf","currency","price_attributes","selectKey","progress_message","parents","includes","outputSelect","feedCurrency","woocommerce","del_confirm_multi","add_postbox_toggles","row","_ajax_clean_nonce","validate","save","server","sftp_checking","sftp_available","merchant","sftp_warning","name","templateName","provider","valid","merchantTemplateCache","outOfStockVisibilityRow","feedName","checked","valueColumn","append","attribute","preload","load","google_category","query","googleCategories","learn_more","cb","itemWrapper","item_wrapper_hidden","wf_csv_txt","id","windowpos","scroll","click","cat_init","wooFeed_get_facebook_categories","wooFeed_get_google_categories","for_attr","setValue","catField","catId","groupId","v","ready","attribute_list","googleMap","current_feed_currency","price","providerName","location","queryString","weight","attribute_value","height","current_Value","dimension","feed_rules","search","get","eq","parseInt","inArray","_key","_value"],"mappings":"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","file":"woo-feed-admin.min.js","sourcesContent":["// noinspection JSUnresolvedletiable\n/**!\n * WooFeed Scripts\n * @version 3.3.6\n * @package WooFeed\n * @copyright 2020 WebAppick\n *\n */\n/* global ajaxurl, wpAjax, postboxes, pagenow, alert, deleteUserSetting, typenow, adminpage, thousandsSeparator, decimalPoint, isRtl */\n// noinspection JSUnresolvedVariable\n(function($, window, document, wpAjax, opts) {\n    \"use strict\";\n    /**\n     * All of the code for your admin-facing JavaScript source\n     * should reside in this file.\n     *\n     * Note: It has been assumed you will write jQuery code here, so the\n     * $ function reference has been prepared for usage within the scope\n     * of this function.\n     *\n     * This enables you to define handlers, for when the DOM is ready:\n     */\n\n    /**\n     * disable element utility\n     *\n     * @since 3.1.9\n     *\n     * @param {*} status\n     * @returns {$|HTMLElement}\n     */\n    $.fn.disabled = function(status) {\n        $(this).each(function() {\n            let self = $(this),\n                prop = 'disabled';\n\n            if (typeof self.prop(prop) !== 'undefined') {\n                self.prop(prop, status === void 0 || status === true);\n            } else {\n                !0 === status ? self.addClass(prop) : self.removeClass(prop);\n            }\n        });\n        return self; // method chaining\n    };\n\n    /**\n     * Check if a HTMLElement or jQuery is disabled\n     */\n    $.fn.isDisabled = function() {\n        let self = $(this),\n            prop = 'disabled';\n        return typeof self.prop(prop) !== 'undefined' ? self.prop(prop) : self.hasClass(prop);\n    };\n\n    /**\n     * Clear Tooltip for clip board js\n     * @param {Object} event\n     */\n    const clearTooltip = (event) => {\n        $(event.currentTarget).removeClass( (index, className) => (className.match(/\\btooltipped-\\S+/g) || []).join(' ') ).removeClass('tooltipped').removeAttr('aria-label');\n    };\n\n    const showTooltip = (elem, msg) => {\n        $(elem).addClass('tooltipped tooltipped-s').attr('aria-label', msg);\n    };\n\n    const fallbackMessage = (action)  =>{\n        let actionMsg,\n            actionKey = action === 'cut' ? 'X' : 'C';\n\n        if (/iPhone|iPad/i.test(navigator.userAgent)) {\n            actionMsg = 'No support :(';\n        } else if (/Mac/i.test(navigator.userAgent)) {\n            actionMsg = 'Press ⌘-' + actionKey + ' to ' + action;\n        } else {\n            actionMsg = 'Press Ctrl-' + actionKey + ' to ' + action;\n        }\n\n        return actionMsg;\n    };\n\n    /**\n     * Alias of jQuery.extend()\n     * @param {Object} _default\n     * @param {Object} _args\n     */\n    const extend = (_default, _args) => $.extend(true, {}, _default, _args);\n\n\t/*\n\t* Handles product attributes\n\t*\n\t* @since 4.4.18\n\t* */\n\tclass WooFeedCustomFields {\n\n\t\tconstructor( field, status, isTaxonomy ) {\n\t\t\tthis.productCustomFields( field, status, isTaxonomy );\n\t\t}\n\n\t\tcacheClear() {\n\t\t\tlet data = {\n\t\t\t\taction: 'woo_feed_product_attribute_cache_remove',\n\t\t\t\tnonce: wpf_ajax_obj.ajax.nonce,\n\t\t\t};\n\t\t\t$.ajax({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: wpf_ajax_obj.wpf_ajax_url,\n\t\t\t\tdata\n\t\t\t});\n\t\t}\n\n\t\tproductCustomFields( field, status = false, isTaxonomy ) {\n\t\t\tlet data = {\n\t\t\t\taction: 'woo_feed_custom_fields_status_change',\n\t\t\t\tnonce: wpf_ajax_obj.ajax.nonce,\n\t\t\t\tfield,\n\t\t\t\tstatus,\n\t\t\t\tisTaxonomy\n\t\t\t};\n\t\t\t$.ajax({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: wpf_ajax_obj.wpf_ajax_url,\n\t\t\t\tdata,\n\t\t\t\tsuccess: ( response ) => {\n\t\t\t\t\tif( response.success ) {\n\t\t\t\t\t\tthis.cacheClear();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log( response );\n\t\t\t\t\t}\n                    $('#'+field+'-switcher').closest('td').find('.switch-loader').hide();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n    /*\n    * Handles product categories\n    *\n    * @since 4.4.39\n    * */\n    class WooFeedFeedCategories {\n        wooFeed_get_google_categories () {\n            wpAjax.send('get_google_categories', {\n                type: 'GET',\n                data: {\n                    _ajax_nonce: opts.nonce,\n                    action: \"get_google_categories\",\n                    // provider: provider\n                }\n            }).then(function (response) {\n                $('.selectize-google-category').selectize({\n                    valueField: 'value',\n                    labelField: 'text',\n                    placeholder: 'Select a category',\n                    searchField: ['value', 'text'],\n                    options: response,\n                    render: {\n                        option: (data, escape) => `<div class=\"item wapk-selectize-item\">${escape(data.value + ' - ' + data.text)}</div>`,\n                        item: (data, escape) => `<div class=\"item wapk-selectize-item\">${escape(data.value + ' - ' + data.text)}</div>`\n                    }\n                });\n            }).fail(helper.ajax_fail);\n        }\n\n        wooFeed_get_facebook_categories() {\n            // get facebook categories\n            wpAjax.send('get_facebook_categories', {\n                type: 'GET',\n                data: {\n                    _ajax_nonce: opts.nonce,\n                    action: \"get_facebook_categories\",\n                    // provider: provider\n                }\n            }).then(function (response) {\n                $('.selectize-google-category').selectize({\n                    valueField: 'value',\n                    labelField: 'text',\n                    placeholder: 'Select a Facebook category',\n                    searchField: ['value', 'text'],\n                    options: response,\n                    render: {\n                        option: (data, escape) => `<div class=\"item wapk-selectize-item\">${escape(data.value + ' - ' + data.text)}</div>`,\n                        item: (data, escape) => `<div class=\"item wapk-selectize-item\">${escape(data.value + ' - ' + data.text)}</div>`\n                    }\n                });\n            }).fail(helper.ajax_fail);\n        }\n    }\n\n    let $copyBtn,\n        clipboard,\n        googleCategories,\n        facebookCategories,\n        helper = {\n            in_array: (needle, haystack) => {\n                try {\n                    return haystack.indexOf(needle) !== -1;\n                } catch (e) {\n                    return false;\n                }\n            },\n            selectize_render_item: (data, escape) => `<div class=\"item wapk-selectize-item\">${escape(data.text)}</div>`, // phpcs:ignore WordPressVIPMinimum.JS.StringConcat.Found,\n            ajax_fail: e => {\n                console.warn(e);\n                alert(e.hasOwnProperty('statusText') && e.hasOwnProperty('status') ? opts.ajax.error + '\\n' + e.statusText + ' (' + e.status + ')' : e);\n            },\n            /**\n             * Initialize Sortable\n             * @param {$|HTMLElement} el\n             * @param {object} config\n             * @param {int|boolean} column\n             * @param {function} onDrop\n             * @return {$|HTMLElement}\n             */\n            sortable: (el, config, column, onDrop) => {\n                return (el || $('.sorted_table')).each(function() {\n                    let self = $(this),\n                        column_count = self.find('tbody > tr:eq(0) > td').length || column || 9;\n                    self.wf_sortable(extend({\n                        containerSelector: 'table',\n                        itemPath: '> tbody',\n                        itemSelector: 'tr',\n                        handle: 'i.wf_sortedtable',\n                        placeholder: `<tr class=\"placeholder\"><td colspan=\"${column_count}\"></td></tr>`,\n                        onDrop: ($item, container, _super, event) => {\n                            $item.removeClass(container.group.options.draggedClass).removeAttr('style');\n                            $(\"body\").removeClass(container.group.options.bodyClass);\n                            if ( onDrop && 'function' === typeof( onDrop ) ) {\n                                onDrop( $item, container, _super, event );\n                            }\n                        },\n                    }, config));\n                });\n            },\n            selectize: (el, config) => {\n                return (el || $('select.selectize')).not('.selectized').not('.selectize-google-category').each(function() {\n                    let self = $(this);\n                    self.selectize(extend({\n                        create: self.data('create') || false,\n                        plugins: self.data('plugins') ? self.data('plugins').split(',').map(function(s) {\n                            return s.trim();\n                        }) : [],\n                        //['remove_button'],\n                        render: {\n                            item: helper.selectize_render_item\n                        }\n                    }, config));\n                });\n            },\n            fancySelect: (el, config) => {\n                return (el || $('select.fancySelect')).not('.FancySelectInit').each(function() {\n                    let self = $(this);\n                    self.fancySelect(extend({\n                        maxItemShow: 3\n                    }, config));\n                });\n            },\n            reindex_config_table: () => {\n                $('#table-1').find('tbody tr').each( ( x, el ) => {\n                    $(el).find('[name]').each( ( x1, el ) => {\n                        $(el).attr('name', $(el).attr('name').replace(/(\\[\\d\\])/g, `[${x}]`));\n                    } );\n                } );\n            },\n            common: () => {\n                helper.sortable( $('.sorted_table'), {}, 9, helper.reindex_config_table );\n                helper.selectize();\n                helper.fancySelect($('.outputType'));\n            }\n        },\n        // helper functions\n        feedEditor = {\n            /**\n             * The Editor Form Elem.\n             * @type {$|HTMLElement}\n             */\n            form: null,\n\n            /**\n             * Initialize The Feed Editor {Tabs...}\n             * @returns {void}\n             */\n            init: function () {\n                let self = this;\n                self.form = $('.generateFeed');\n                if (!self.form.length) return;\n                helper.common();\n                // noinspection JSUnresolvedVariable\n                $(document).trigger('feed_editor_init');\n                $(document).trigger(new jQuery.Event('feedEditor.init', {\n                    target: this.form\n                }));\n            },\n\n            /**\n             * Render Merchant info ajax response and handle allowed feed type for selected merchant\n             * @param {$|HTMLElement} merchantInfo jQuery dom object\n             * @param {$|HTMLElement} feedType     jQuery dom object\n             * @param {Object} r            ajax response object\n             */\n            renderMerchantInfo: function (merchantInfo, feedType, r) {\n                for (let k in r) {\n                    if (r.hasOwnProperty(k)) {\n                        merchantInfo.find('.merchant-info-section.' + k + ' .data').html(r[k]); // phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html\n\n                        if ('feed_file_type' === k) {\n                            (function() {\n                                let types = r[k].split(\",\").map(function(t) {\n                                    return t.trim().toLowerCase();\n                                }).filter(function(t) {\n                                    // noinspection JSUnresolvedVariable\n                                    return t !== '' && t !== opts.na.toLowerCase();\n                                });\n\n                                if (types.length) {\n                                    feedType.find('option').removeAttr('selected').each(function() {\n                                        let opt = $(this);\n                                        opt.val() && !helper.in_array(opt.val(), types) ? opt.disabled(!0) : opt.disabled(!1);\n                                    });\n                                    if (types.length === 1) feedType.find('option[value=\"' + types[0] + '\"]').attr('selected', 'selected');\n                                } else feedType.find('option').disabled(!1);\n                            })();\n                        }\n                    }\n                }\n\n                merchantInfo.find('.spinner').removeClass('is-active');\n                feedType.disabled(!1);\n                feedType.trigger('change');\n\n                /**\n                 * Triggers after merchant configuration is fetched & loaded\n                 * */\n                $(document).trigger('woo_feed_config_loaded');\n\n                feedType.parent().find('.spinner').removeClass('is-active');\n            },\n\n            /**\n             * Render Feed Template Tabs and settings while creating new feed.\n             * @param {$|HTMLElement} feedForm     feed from query dom object\n             * @param {object} r            merchant template ajax response object\n             */\n            renderMerchantTemplate: function (feedForm, r) {\n                let _loop = function _loop(k) {\n                    if (r.hasOwnProperty(k)) {\n                        if ('tabs' === k) {\n                            // noinspection JSUnresolvedFunction\n                            feedForm.html(r[k]); // phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html\n                        } else {\n                            let contentSettings = $('[name=\"' + k + '\"]');\n\n                            if (contentSettings.length) {\n                                contentSettings.each(function() {\n                                    let elem = $(this);\n\n                                    if (elem.is('select')) {\n                                        elem.find('[value=\"' + r[k] + '\"]').prop('selected', true);\n                                    } else if ((elem.is('[type=checkbox]') || elem.is('[type=radio]')) && elem.val() === r[k]) {\n                                        elem.prop('checked', true);\n                                    } else {\n                                        elem.val(r[k]); // type=text\n                                    }\n                                }).trigger('change');\n                            }\n                        }\n                    }\n                };\n\n                for (let k in r) {\n                    _loop(k);\n                }\n\n                feedEditor.init();\n            }\n        },\n        // Feed Editor Table\n        merchantInfoCache = [],\n        merchantTemplateCache = [],\n        tooltip = () => {\n            // Tooltip only Text\n            $('.wfmasterTooltip')\n                .hover(function () {\n                    // Hover over code\n                    let self = $(this), title = self.attr('wftitle');\n                    self.data('tipText', title).removeAttr('wftitle');\n                    $('<p class=\"wftooltip\"></p>').text(title).appendTo('body').fadeIn('slow');\n                }, function () {\n                    // Hover out code\n                    let self = $(this);\n                    self.attr('wftitle', self.data('tipText'));\n                    $('.wftooltip').remove();\n                })\n                .mousemove(function (e) {\n                    $('.wftooltip').css({\n                        top: e.pageY + 10,\n                        left: e.pageX + 20\n                    });\n                });\n        },\n        clip = () => {\n            $copyBtn = $('.toClipboard');\n            if (!ClipboardJS.isSupported() || /iPhone|iPad/i.test(navigator.userAgent)) {\n                $copyBtn.find('img').hide(0);\n            } else {\n                $copyBtn.each(function() {\n                    $(this).on('mouseleave', clearTooltip).on('blur', clearTooltip);\n                });\n                clipboard = new ClipboardJS('.toClipboard');\n                clipboard.on('error', function(event) {\n                    showTooltip(event.trigger, fallbackMessage(event.action));\n                }).on('success', function(event) {\n                    showTooltip(event.trigger, 'Copied');\n                });\n            }\n        };\n\n    /**\n     * Feed Generator Module\n     */\n    class feedGenerator {\n\n        /**\n         * Constructor\n         * @constructor\n         */\n        constructor() {\n            this._feed = opts.generator.feed; // wf_config+xxxx\n            this._limit = opts.generator.limit;\n            this._progress = 0;\n            this._timer = null;\n            this._color = false;\n            // batch info\n            this._total_batch = 0;\n            this._current_batch = 0;\n            this._product_ids = [];\n            this._progress_per_batch = 0;\n            this._refresh = true;\n            // noinspection JSUnresolvedVariable\n            this._regenerate = opts.generator.regenerate;\n            window.isRegenerating = false;\n            this._all_btn = $('.wpf_regenerate');\n            this._current_btn = $(`#${this._feed.replace( 'wf_config', 'wf_feed_' )}`);\n            this._current_btn_label = '';\n        }\n\n        /**\n         * Init Hooks (Event)\n         * @return {feedGenerator}\n         */\n        init() {\n            let self = this;\n            if ( '' !== this._feed && this._regenerate && false === window.isRegenerating ) {\n                this.generate();\n            }\n\n            //thickbox body add feed plugin class to make it unique and custom style\n            let current_page_query = window.location.search;\n            let params = new URLSearchParams(current_page_query);\n            let page_name = params.get(\"page\");\n            if( \"webappick-manage-feeds\" === page_name ) {\n                $('body').addClass('woo-import-popup-body');\n            }\n\n            $(document).on('click', '.woo-feed-campaign-close-button', function(event) {\n                event.preventDefault();\n\n                $(this).parent('.woo-feed-promotion').hide();\n                let condition = $(this).data('condition');\n                if(1 === condition) {\n                    wpAjax.post( 'woo_feed_hide_promotion', {\n                        _ajax_nonce: opts.nonce,\n                        condition: condition,\n                    } ).then( response => {\n                        self._log( response );\n                    } ).fail( error => {\n                        self._log( error );\n                        self._updateProgressStatus( error.message );\n                        self._color = 'red';\n                    } );\n                }\n            });\n\n            $(document).on('click', '.wpf_regenerate', function(event) {\n                event.preventDefault();\n                self._current_btn = $( this );\n                if( self._current_btn.hasClass('disabled') || window.isRegenerating === true ) return;\n                self._feed = self._current_btn.attr('id').replace( 'wf_feed_', 'wf_config' );\n                if( '' !== self._feed ) {\n                    self.generate();\n                }\n            });\n            return this;\n        }\n\n        _block_button() {\n            if ( this._all_btn.length ) {\n                this._all_btn.addClass('disabled');\n            }\n            if ( this._current_btn.length ) {\n                this._current_btn.find('span').addClass('wpf_spin reverse_spin');\n                this._current_btn_label = this._current_btn.attr('title');\n                // noinspection JSUnresolvedVariable\n                this._current_btn.attr( 'aria-label', opts.regenerate ).attr( 'title', opts.regenerate );\n            }\n        }\n\n        _unblock_button() {\n            if ( this._all_btn.length ) {\n                this._all_btn.removeClass('disabled');\n            }\n            if ( this._current_btn.length ) {\n                this._current_btn.find('span').removeClass('wpf_spin');\n                this._current_btn.find('span').removeClass('reverse_spin');\n                this._current_btn.attr( 'aria-label', this._current_btn_label ).attr( 'title', this._current_btn_label );\n            }\n        }\n\n        /**\n         * Generate Feed\n         * @return void\n         */\n        generate() {\n            let self = this;\n            window.isRegenerating = true;\n            this._block_button();\n            this._resetProgressBar();\n            this._progressBarActive();\n            this._log( 'Counting Total Products' );\n            this._updateProgressStatus( 'Fetching products.' );\n            this._get_product_ids().then( response => {\n                this._progress = 10;\n                self._log( {response} );\n                if(response.success) {\n                    self._log( `Total ${response.total} Products found.` );\n                    self._product_ids = response.product;\n                    self._total_batch = this._product_ids.length;\n                    self._current_batch = 0;\n                    self._progress_per_batch = ( 90 - this._progress ) / this._total_batch;\n                    self._process_batch();\n                    self._updateProgressStatus( 'Processing Products...' );\n                } else {\n                    self._updateProgressStatus( response.data.message );\n                }\n            }).fail( error => {\n                self._log( error );\n                self._updateProgressStatus( error.message );\n                self._color = 'red';\n                setTimeout( function(){\n                    self._stopProgressBar();\n                    self._unblock_button();\n                }, 1500 );\n            } );\n        }\n\n        /**\n         * Get Product Ids\n         * @returns {$.promise}\n         * @private\n         */\n        _get_product_ids() {\n            this._progress = 5;\n            return wpAjax.post( 'get_product_information', {\n                _ajax_nonce: opts.nonce,\n                feed: this._feed,\n                limit: this._limit,\n            } );\n        }\n\n        /**\n         * Run the Batch\n         * @private\n         */\n        _process_batch() {\n            let self = this;\n            let status = `Processing Batch ${this._current_batch+1} of ${this._total_batch}`;\n            this._updateProgressStatus( status );\n            this._log( status );\n            wpAjax.post( 'make_batch_feed', {\n                _ajax_nonce: opts.nonce,\n                feed: this._feed,\n                products: this._product_ids[this._current_batch],\n                loop: this._current_batch,\n            } ).then( response => {\n                self._current_batch++;\n                self._log( `Batch ${self._current_batch} Completed` );\n                self._log( response );\n                if ( self._current_batch < self._total_batch ) {\n                    self._process_batch();\n                    self._progress += self._progress_per_batch;\n                }\n                if ( self._current_batch === self._total_batch ) {\n                    self._save_feed_file();\n                }\n            } ).fail( error => {\n                self._log( error );\n                self._updateProgressStatus( error.message );\n                self._color = 'red';\n                setTimeout( function(){\n                    self._stopProgressBar();\n                    self._unblock_button();\n                }, 1500 );\n            } );\n        }\n\n        /**\n         * Save Feed Data from temp to feed file\n         * @private\n         */\n        _save_feed_file() {\n            let self = this;\n            this._log( 'Saving feed file' );\n            this._updateProgressStatus( 'Saving feed file' );\n            wpAjax.post( 'save_feed_file', {\n                _ajax_nonce: opts.nonce,\n                feed: this._feed,\n            } ).then( response => {\n                self._log( response );\n                self._progress = 100;\n                if ( self._refresh ) {\n                    window.location.href = `${opts.pages.list.feed}&link=${response.url}&cat=${response.cat}`;\n                }\n                setTimeout( function(){\n                    self._stopProgressBar();\n                    setTimeout( function(){\n                        self._resetProgressBar( true );\n                        self._unblock_button();\n                    }, 3000 );\n                }, 2500 );\n            } ).fail( error => {\n                self._log( error );\n                self._updateProgressStatus( error.message );\n                self._color = 'red';\n                setTimeout( function(){\n                    self._stopProgressBar();\n                    self._unblock_button();\n                }, 1500 );\n            } );\n        }\n\n        /**\n         * Console log wrapper with debug settings.\n         * @param data\n         * @returns {feedGenerator}\n         * @private\n         */\n        _log( data ) {\n            // noinspection JSUnresolvedVariable\n            if ( opts.wpf_debug ) {\n                console.log( data );\n            }\n            return this;\n        }\n\n        /**\n         * Run the progressbar refresh interval\n         * @param {int} refreshInterval\n         * @returns {feedGenerator}\n         * @private\n         */\n        _progressBarActive( refreshInterval = 0 ) {\n            let self = this;\n            this._toggleProgressBar( true );\n            this._timer = setInterval( function(){\n                self._updateProgressBar();\n            }, refreshInterval || 1000 );\n            return this;\n        }\n\n        /**\n         * Stop Progressbar\n         * @returns {feedGenerator}\n         * @private\n         */\n        _stopProgressBar() {\n            clearInterval( this._timer );\n            return this;\n        }\n\n        /**\n         * Reset Progressbar\n         * @returns {feedGenerator}\n         * @private\n         */\n        _resetProgressBar( update ) {\n            this._toggleProgressBar( false );\n            this._updateProgressStatus( '' );\n            clearInterval( this._timer );\n            this._color = false;\n            this._timer = null;\n            this._progress = 0;\n            if ( update ) {\n                this._updateProgressBar();\n            }\n            return this;\n        }\n\n        /**\n         * Show hide the progress bar el\n         * @param status\n         * @returns {feedGenerator}\n         * @private\n         */\n        _toggleProgressBar( status ) {\n            let table = $('#feed_progress_table');\n            if ( status ) {\n                table.show();\n            } else {\n                table.hide();\n            }\n            return this;\n        }\n\n        /**\n         * Update Progress bar text status\n         * @param {string} status\n         * @returns {feedGenerator}\n         * @private\n         */\n        _updateProgressStatus( status ) {\n            $( '.feed-progress-status' ).html( status );\n            return this;\n        }\n\n        _getErrorMessageByCode( error ){\n            let progress_message =  $( '.feed-progress-status' );\n            progress_message.css( {'color':this._color});\n            $( '.feed-progress-percentage' ).css( {'color':this._color});\n            $( '.wpf_spin' ).css( {'color':this._color});\n\n            let message=error.status +' : '+ error.statusText+'. ';\n            if(500===error.status){\n                message+= \"Please increase your PHP max_execution_time. Please <a target='_blank' href='https://webappick.com/docs/woo-feed/faq-for-woocommerce-product-feed/how-to-solve-processing-10-feed-generation-stuck-error/'>read this doc</a>.\";\n            }\n\n            this._updateProgressStatus(message);\n\n        }\n\n        /**\n         * Update Progress Data\n         * hooked with setInterval\n         * @private\n         */\n        _updateProgressBar() {\n            let percentage = $( '.feed-progress-percentage' ),\n                bar = $( '.feed-progress-bar-fill' ),\n                _progress = `${Math.round( this._progress )}%`;\n            bar.css( {\n                width: _progress,\n            } );\n            percentage.text( _progress );\n        }\n    }\n    // expose to the global scope\n    window.wf = {\n        helper: helper,\n        feedEditor: feedEditor,\n        generator: feedGenerator,\n    };\n\n    $(window).on('load', function() {\n        // Template loading ui conflict\n        if ($(location).attr(\"href\").match(/webappick.*feed/g) !== null) {\n            $('#wpbody-content').addClass('woofeed-body-content');\n        }\n\n        // ClipBoardJS\n        clip();\n        // postbox toggle\n        postboxes.add_postbox_toggles(pagenow);\n        // initialize generator\n        let generator = new feedGenerator();\n        generator.init();\n        // noinspection JSUnresolvedVariable\n        if( '' !== opts.generator.feed && opts.generator.regenerate ) {\n\n        }\n        // initialize editor\n        feedEditor.init();\n        helper.common(); // Generate Feed Add Table Row\n        tooltip();\n        // validate feed editor\n        $(\".generateFeed\").validate();\n\n        // document events\n        $(document)\n            .on('blur', 'input[name=\"wfDAttributeName\"]', function(e) {\n                e.preventDefault();\n                let attr_name = $(this).val();\n                    attr_name = attr_name.toLowerCase();\n                    attr_name = attr_name.split(' ').join('_');\n\n                $('#wfDAttributeCode').val(attr_name);\n\n            })\n            .on('click', '[data-toggle_slide]', function(e) {\n                e.preventDefault();\n                $($(this).data('toggle_slide')).slideToggle('fast');\n            })\n            // XML Feed Wrapper\n            .on('click', '#wf_newRow', function () {\n                let tbody = $('#table-1 tbody'),\n                    template = $('#feed_config_template').text().trim().replace(/__idx__/g, tbody.find('tr').length);\n                tbody.append(template);\n                helper.fancySelect($('.outputType'));\n            })\n            // feed delete alert.\n            .on('click', '.single-feed-delete', function (event) {\n                event.preventDefault();\n                // noinspection JSUnresolvedVariable\n                if (confirm(opts.form.del_confirm)) {\n                    window.location.href = $(this).attr('val');\n                }\n            })\n            // clear cache data.\n            .on('click', '.wf_clean_cache_wrapper', function(event) {\n                event.preventDefault();\n                var nonce = $('.woo-feed-clean-cache-nonce').val();\n                var loader = $('.woo-feed-cache-loader');\n\n                //show loader\n                loader.show();\n\n                // passed cache nonce\n                wpAjax.post('clear_cache_data', {\n                    _ajax_clean_nonce: nonce\n                }).then(function (response) {\n                    if( response.success ) {\n                        loader.hide(); //hide loader\n                        location.reload();\n                    }\n                }).fail(function () {\n                    console.log('something wrong');\n                });\n\n            })// Copy Status\n            .on('click', '#woo-feed-copy-status-btn', function(event) {\n                event.preventDefault();\n                let button = $('#woo-feed-copy-status-btn');\n                let status_area = $('#woo-feed-status-area');\n                button.val('Copied');\n                status_area.css('visibility','visible');\n                status_area.select();\n\n                document.execCommand('copy');\n            })\n            // feed value dropdown change.\n            .on('change', '.wf_attr.wf_attributes', function(event) {\n                event.preventDefault();\n\n                $('.fancy-picker-picked').trigger(\"click\"); // trigger fancy select box clicked\n\n                // price attributes\n                var price_attributes = ['price', 'current_price', 'sale_price', 'price_with_tax', 'current_price_with_tax', 'sale_price_with_tax', 'shipping_cost'];\n                // current value\n                var current_attribute_value = $(this).val();\n                var outputSelect = $(this).parents('tr').find('.outputType');\n                var fancyOption = $(this).parents('tr').find('.fancy-picker-content .fancy-picker-option');\n                var fancyDataPicker = $(this).parents('tr').find('.fancy-picker-data span');\n                var selectIf, selectKey;\n                var currency;\n\n                // when any attribute is selected, pick the key\n                if( price_attributes.includes(current_attribute_value)  ) {\n                    // when select any price attribute\n                    selectIf = 'for_price';\n                    selectKey = \"Price\";\n                } else if ( \"\" !== current_attribute_value && -1 !== current_attribute_value.indexOf('wf_taxo') ) {\n\n                    // when select any custom taxonomy\n                    selectIf = 'for_custom_taxo';\n                    selectKey = \"parent_if_empty\";\n                } else {\n\n                    selectIf = 'for_all';\n                    selectKey = 'Default';\n                }\n\n                // remove selected class from old selected option\n                fancyOption.removeClass('selected');\n\n                // when value dropdown is selected as price or any custom taxonomy\n                if( selectIf === 'for_custom_taxo' || selectIf === 'for_price' ) {\n                    // update \"Option Type\" when select key matches\n                    fancyOption.each(function() {\n                        if( selectKey === $(this).text() ) {\n                            $(this).addClass('selected');\n                            fancyDataPicker.text(selectKey);\n                            outputSelect.find(\"option\").text(selectKey);\n                            outputSelect.find(\"option\").val( $(this).data('value') );\n                        }\n                    });\n\n                    if( \"for_price\" === selectIf ) {\n                        var feedCurrency = $('#feedCurrency').val();\n                        if( \"undefined\" !== typeof feedCurrency && null !== feedCurrency ) {\n                            currency = feedCurrency;\n                        }else {\n                            currency = wpf_ajax_obj.woocommerce.currency;\n                        }\n\n                        //for price add currency to the suffix\n                        $(this).closest(\"tr\").find(\"td:eq(5) input\").val(\" \" + currency);\n                    }\n\n                } else {\n                    fancyOption.each(function(){\n                        if( selectKey === $(this).text() ){\n                            $(this).addClass('selected');\n                            fancyDataPicker.text(selectKey);\n                            outputSelect.find(\"option\").text(selectKey);\n                            outputSelect.find(\"option\").val( $(this).data(\"value\") );\n                        }\n                    });\n\n                    $(this).closest(\"tr\").find(\"td:eq(5) input\").val(\"\");\n                }\n\n            })\n            // bulk delete alert.\n            .on('click', '#doaction, #doaction2', function () {\n                // noinspection JSUnresolvedVariable\n                return confirm(opts.form.del_confirm_multi);\n            })\n            // Generate Feed Table Row Delete\n            .on('change', '.dType', function () {\n                let self = $(this),\n                    type = self.val(),\n                    row = self.closest('tr');\n\n                if (type === 'pattern') {\n                    row.find('.value_attribute').hide();\n                    row.find('.value_pattern').show();\n                } else if (type === 'attribute') {\n                    row.find('.value_attribute').show();\n                    row.find('.value_pattern').hide();\n                } else if (type === 'remove') {\n                    row.find('.value_attribute').hide();\n                    row.find('.value_pattern').hide();\n                }\n            })\n            // Generate Feed Form Submit\n            .on('click', '.delRow', function (e) {\n                e.preventDefault();\n                $(this).closest('tr').remove();\n                helper.reindex_config_table();\n            })\n            .on('submit', '#generateFeed', function () {\n                // Feed Generating form validation\n                $(this).validate();\n\n                if ($(this).valid()) {\n                    $(\".makeFeedResponse\")\n                        .show()\n                        .html(`<b style=\"color: darkblue;\"><i class=\"dashicons dashicons-sos wpf_spin\"></i> ${opts.form.generate}</b>`); // phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html, WordPressVIPMinimum.JS.StringConcat.Found\n                }\n            })\n            // Generate Update Feed Form Submit\n            .on('submit', '#updatefeed', function (e, data) {\n                // Feed Generating form validation\n                $(this).validate();\n\n                if ($(this).valid()) {\n                    $(\".makeFeedResponse\")\n                        .show()\n                        .html(`<b style=\"color: darkblue;\"><i class=\"dashicons dashicons-sos wpf_spin\"></i> ${data && data.save ? opts.form.save : opts.form.generate}</b>`); // phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html, WordPressVIPMinimum.JS.StringConcat.Found\n                }\n            })\n            .on( 'ready woo_feed_config_loaded', function(){\n\n                if( $('#ftpenabled').val() === '0' ){\n                    $('.google-merchant-message').hide('slow');\n                    $('.woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) input, .woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) select').attr('disabled','disabled');\n                } else {\n                    if( $('#provider').val() === 'google' ) {\n                        $('.google-merchant-message').show('slow');\n                    } else {\n                        $('.google-merchant-message').hide('slow');\n                    }\n                    $('.woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) input, .woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) select').removeAttr('disabled');\n                }\n\n                $('#ftpenabled').on('change', function(){\n                    if( $('#ftpenabled').val() === '0' ){\n                        $('.google-merchant-message').hide('slow');\n                        $('.woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) input, .woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) select').attr('disabled','disabled');\n                    } else {\n\n                        $('.woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) input, .woo-feed-ftp .ftpconfig tr:not(.ftpcontroller) select').removeAttr('disabled');\n\n                        // Google merchant specific message\n                        if( $('#provider').val() === 'google' ){\n                            $('.google-merchant-message').show('slow');\n                        } else {\n                            $('.google-merchant-message').hide('slow');\n                        }\n\n                    }\n                });\n            })\n            .on('change', '.ftporsftp', function () {\n                let server = $(this).val(),\n                    status = $('.ssh2_status');\n\n                if (server === 'sftp') {\n                    // noinspection JSUnresolvedVariable\n                    status.show().css('color', 'dodgerblue').text(opts.form.sftp_checking);\n                    wpAjax.post('get_ssh2_status', {\n                        _ajax_nonce: opts.nonce,\n                        server: server\n                    }).then(function (response) {\n                        if (response === 'exists') {\n                            // noinspection JSUnresolvedVariable\n                            status.css('color', '#2CC185').text(opts.form.sftp_available);\n                            setTimeout(function () {\n                                status.hide();\n                            }, 1500);\n                        } else {\n                            // noinspection JSUnresolvedVariable\n                            status.show().css('color', 'red').text(opts.form.sftp_warning);\n                        }\n                    }).fail(function (e) {\n                        status.hide();\n                        helper.ajax_fail(e);\n                    });\n                } else {\n                    status.hide();\n                }\n            })\n            .on('click', '[name=\"save_feed_config\"]', function (e) {\n                e.preventDefault();\n                $('#updatefeed').trigger('submit', {\n                    save: true\n                });\n            })\n            .on('change', '#provider', function (event) {\n                event.preventDefault();\n\n                let merchant = $(this).val(),\n                    templateName = $(this).find(':selected').text(),\n                    name = $('#filename').val(),\n                    feedType = $(\"#feedType\"),\n                    feedForm = $(\"#providerPage\"),\n                    merchantInfo = $('#feed_merchant_info'); // set loading..\n\n                // noinspection JSUnresolvedVariable\n                feedForm.html('<h3><span style=\"float:none;margin: -3px 0 0;\" class=\"spinner is-active\"></span> ' + opts.form.loading_tmpl + '</h3>'); // phpcs:ignore WordPressVIPMinimum.JS.HTMLExecutingFunctions.html, WordPressVIPMinimum.JS.StringConcat.Found\n\n                merchantInfo.find('.spinner').addClass('is-active');\n                feedType.disabled(!0); // disable dropdown\n\n                feedType.parent().find('.spinner').addClass('is-active');\n                merchantInfo.find('.merchant-info-section .data').html(''); // remove previous data\n                // Get Merchant info for selected Provider/Merchant\n\n                if (merchantInfoCache.hasOwnProperty(merchant)) {\n                    feedEditor.renderMerchantInfo(merchantInfo, feedType, merchantInfoCache[merchant]);\n\n                    /**\n                     * Triggers after merchant configuration is fetched & loaded\n                     * */\n                    $(document).trigger('woo_feed_config_loaded');\n\n                } else {\n                    wpAjax.send('woo_feed_get_merchant_info', {\n                        type: 'GET',\n                        data: {\n                            nonce: opts.nonce,\n                            provider: merchant,\n                            templateName: templateName\n                        }\n                    }).then(function (r) {\n                        merchantInfoCache[merchant] = r;\n                        feedEditor.renderMerchantInfo(merchantInfo, feedType, r);\n                    }).then(function(){\n\n                        /**\n                         * Triggers after merchant configuration is fetched & loaded\n                         * */\n                        $(document).trigger('woo_feed_config_loaded');\n\n                    }).fail(helper.ajax_fail);\n                } // Get FeedForm For Selected Provider/Merchant\n\n\n                if (merchantTemplateCache.hasOwnProperty(merchant)) {\n                    feedEditor.renderMerchantTemplate(feedForm, merchantTemplateCache[merchant]);\n\n                    /**\n                     * Triggers after merchant configuration is fetched & loaded\n                     * */\n                    $(document).trigger('woo_feed_config_loaded');\n\n                } else {\n                    wpAjax.post('get_feed_merchant', {\n                        _ajax_nonce: opts.nonce,\n                        merchant: merchant\n                    }).then(function (r) {\n                        merchantTemplateCache[merchant] = r;\n                        feedEditor.renderMerchantTemplate(feedForm, r);\n                        $('#utm_source').val(templateName);\n                        $('#utm_campaign').val(name);\n                        //when merchant is bing, change delimiter and enclosure\n                        if( 'bing' === merchant ) {\n                            //delimiter value\n                            $(\"#delimiter option\").removeAttr('selected');\n                            $(\"#delimiter option[value=\\\"tab\\\"]\").attr('selected', 'selected');\n\n                            //enclosure value\n                            $(\"#enclosure option\").removeAttr('selected');\n                            $(\"#enclosure option[value=\\\" \\\"]\").attr('selected', 'selected');\n                        }\n\n                        //reviewer options hide\n                        if( 'google_product_review' !== merchant) {\n                            $('.wf_attributes option[value=\"reviewer_name\"]').hide();\n                        }\n                    }).then(function(){\n\n                        /**\n                         * Triggers after merchant configuration is fetched & loaded\n                         * */\n                        $(document).trigger('woo_feed_config_loaded');\n\n                    }).fail(helper.ajax_fail);\n                }\n            })\n            // Feed Active and Inactive status change via ajax\n            .on('change', '.woo_feed_status_input', function () {\n                let self = $(this);\n                wpAjax.post('update_feed_status', {\n                    _ajax_nonce: opts.nonce,\n                    feedName: self.val(),\n                    status: self[0].checked ? 1 : 0\n                });\n            });\n        // event with trigger\n        $(document)\n            .on('change', '[name=\"is_outOfStock\"], [name=\"product_visibility\"]', function () {\n                let outOfStockVisibilityRow = $('.out-of-stock-visibility');\n                if ($('[name=\"is_outOfStock\"]:checked').val() === 'n' && $('[name=\"product_visibility\"]:checked').val() === '1') {\n                    outOfStockVisibilityRow.show();\n                } else {\n                    outOfStockVisibilityRow.hide();\n                }\n            })\n            .on('change', '.attr_type', function () {\n                // Attribute type selection\n                let self = $(this),\n                    type = self.val(),\n                    row = self.closest('tr');\n\n                if (type === 'pattern') {\n                    row.find('.wf_attr').hide();\n                    row.find('.wf_attr').val('');\n                    row.find('.wf_default').show();\n                } else {\n                    row.find('.wf_attr').show();\n                    row.find('.wf_default').hide();\n                    row.find('.wf_default').val('');\n                }\n            })\n            .on('change', '.wf_mattributes, .attr_type', function () {\n                let row = $(this).closest('tr'),\n                    attribute = row.find('.wf_mattributes'),\n                    type = row.find('.attr_type'),\n                    valueColumn = row.find('td:eq(4)'),\n                    provider = $('#provider').val();\n\n                // noinspection JSUnresolvedVariable\n                if (opts.form.google_category.hasOwnProperty(attribute.val()) && type.val() === 'pattern' && helper.in_array(provider, opts.form.google_category[attribute.val()])) {\n                    if (valueColumn.find('select.selectize').length === 0) {\n                        valueColumn.find('input.wf_default').remove();\n                        valueColumn.append('<span class=\"wf_default wf_attributes\"><select name=\"default[]\" class=\"selectize\"></select></span>');\n                        // noinspection JSUnresolvedVariable\n                        valueColumn.append(`<span style=\"font-size:x-small;\"><a style=\"color: red\" href=\"https://webappick.com/docs/woo-feed/feed-configuration/how-to-map-store-category-with-merchant-category/\" target=\"_blank\">${opts.learn_more}</a></span>`);\n\n                        if (!googleCategories || !facebookCategories) {\n                            valueColumn.append('<span class=\"spinner is-active\" style=\"margin: 0;\"></span>');\n                        }\n\n                        let select = valueColumn.find('.wf_attributes select');\n                        // noinspection JSUnresolvedVariable\n                        helper.selectize(select, {\n                            preload: true,\n                            placeholder: opts.form.select_category,\n                            load: function load(query, cb) {\n                                if (!googleCategories) {\n                                    wpAjax.send('get_google_categories', {\n                                        type: 'GET',\n                                        data: {\n                                            _ajax_nonce: opts.nonce,\n                                            action: \"get_google_categories\",\n                                            provider: provider\n                                        }\n                                    }).then(function (r) {\n                                        googleCategories = r;\n                                        cb(googleCategories);\n                                        valueColumn.find('.spinner').remove();\n                                    }).fail(helper.ajax_fail);\n                                } else {\n                                    cb(googleCategories);\n                                }\n\n                                //for facebook product category merchant attribute\n                                if (!facebookCategories && \"facebook\" === provider && \"fb_product_category\" === attribute.val()) {\n                                    wpAjax.send('get_facebook_categories', {\n                                        type: 'GET',\n                                        data: {\n                                            _ajax_nonce: opts.nonce,\n                                            action: \"get_facebook_categories\",\n                                            provider: provider\n                                        }\n                                    }).then(function (r) {\n                                        facebookCategories = r;\n                                        cb(facebookCategories);\n                                        valueColumn.find('.spinner').remove();\n                                    }).fail(helper.ajax_fail);\n                                } else {\n                                    cb(facebookCategories);\n                                }\n                            }\n                        });\n                    }\n                } else {\n                    if ( attribute.val() !== 'current_category' && valueColumn.find('input.wf_default').length === 0) {\n                        valueColumn.find('span').remove();\n                        valueColumn.append('<input autocomplete=\"off\" class=\"wf_default wf_attributes\"  type=\"text\" name=\"default[]\" value=\"\">');\n\n                        if (type.val() !== 'pattern') {\n                            valueColumn.find('input.wf_default').hide();\n                        }\n                    }\n                }\n            })\n            .on('change', '#feedType,#provider', function (e) {\n                let type = $('#feedType').val(),\n                    provider = $('#provider').val(),\n                    itemWrapper = $('.itemWrapper'),\n                    wf_csv_txt = $('.wf_csvtxt');\n\n                // noinspection JSUnresolvedVariable\n                if (type !== '' && helper.in_array(provider, opts.form.item_wrapper_hidden)) {\n                    itemWrapper.hide();\n                }\n\n                //when feed type is changed\n                if( 'feedType' === e.target.id ) {\n                    if (type === 'csv' || type === 'txt' || type === 'tsv') {\n                        wf_csv_txt.show();\n                        itemWrapper.hide();\n                        \n                        if( 'tsv' === type ) {\n                            $('#delimiter option:last').prop(\"selected\", \"selected\");\n                        } else if( 'csv' === type ) {\n                            $('#delimiter option:first').prop(\"selected\", \"selected\");\n                        }\n                    } else if( 'xml' === type && \"custom\" === provider ) {\n                        itemWrapper.show();\n                        wf_csv_txt.hide();\n                    } else if( 'json' === type ) {\n                        wf_csv_txt.hide();\n                    }\n                }\n\n                // when template is not custom template 1 hide the item wrapper\n                if( \"custom\" !== provider ) {\n                    itemWrapper.hide();\n                }\n\n            })\n            .trigger('change');\n\n\n        $(document)\n\t\t\t.on('click', '.woofeed-custom-fields [id*=\"-switcher\"]', function () {\n\t\t\t    $(this).closest('td').find('.switch-loader').show();\n\t\t\t\tlet field = $(this).attr( 'id' ).split( '-' )[0],\n\t\t\t\t\tisTaxonomy = $(this).data( 'taxonomy' ),\n\t\t\t\t\tstatus = $(this).prop( 'checked' );\n\t\t\t\tnew WooFeedCustomFields( field, status, isTaxonomy );\n\n\t\t\t})\n\n\t\t\t// Remove sticky cart on feature page\n\t\t\t.ready(function() {\n\t\t\t\tvar s = $(\".wapk-feed-buy-now-container\");\n\t\t\t\t$(window).scroll(function() {\n\t\t\t\t\tvar windowpos = $(window).scrollTop();\n\t\t\t\t\tif ( windowpos <= 5000 ) {\n\t\t\t\t\t\ts.addClass(\"fixed\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\ts.removeClass(\"fixed\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n    });\n\n    $(document)\n\t\t.on('click', '#woo-feed-debug-log-download', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(\"<a />\", {\n\t\t\t\tdownload: new Date() + \".log\",\n\t\t\t\thref: URL.createObjectURL(\n\t\t\t\t\tnew Blob([$(\"#woo-feed-debug-log\").val()], {\n\t\t\t\t\t\ttype: \"text/plain\"\n\t\t\t\t\t})),\n\t\t\t}).appendTo(\"body\")[0].click();\n\t\t})\n\t\t.on('keyup', '#filename', function() {\n\t\t\tvar name = $('#filename').val();\n\t\t\t$('#utm_campaign').val(name);\n\t\t})\n\n        .on('click', '.wf-tab-name', function(e) {\n            $('.wf-tab-name.activate').removeClass('activate');\n            $(this).addClass('activate');\n\n            let for_attr = $(this).attr('for');\n            $('.wf_tabs li.active').removeClass('active');\n            $('.wf_tabs .wf-tab-content#' + for_attr).parent().addClass('active');\n        })\n\n\t\t.on('change', '#category-mapping-form #providers', function() {\n\t\t\tvar provider = $(this).find(':selected').val(),\n\t\t\t\tgoogleMap = ['google', 'facebook', 'pinterest', 'bing', 'bing_local_inventory', 'snapchat'];\n\t\t\tif( googleMap.indexOf(provider) !== -1 ) {\n\t\t\t\t$('input[id*=\"cat_mapping_\"]').css('display', 'none');\n\t\t\t\t$('.wf_default.wf_attributes').css('display', 'block').css('width', '100%');\n\n                var cat_init = new WooFeedFeedCategories();\n                if( \"facebook\" === provider ) {\n                    cat_init.wooFeed_get_facebook_categories();\n                }else {\n                    cat_init.wooFeed_get_google_categories();\n                }\n\n            } else {\n\t\t\t\t$('input[id*=\"cat_mapping_\"]').css('display', 'block');\n\t\t\t\t$('.wf_default.wf_attributes').css('display', 'none').css('width', '100%');\n\t\t\t}\n\t\t})\n\n        // Copy parent category ids to child categories.\n\t\t.on('click', 'span[id*=\"cat-map-\"]', function(e) {\n\t\t\te.preventDefault();\n\t\t\tvar providerName = $('#category-mapping-form #providers').val(),\n\t\t\t\tgoogleMap = ['google', 'facebook', 'pinterest', 'bing', 'bing_local_inventory', 'snapchat'],\n\t\t\t\tcatId = $(this).attr('id').replace(/[^\\d.]/g, ''),\n\t\t\t\tgroupId = 'group-child-' + catId;\n\n\t\t\tif( googleMap.indexOf(providerName) !== -1) {\n\t\t\t\tvar catField = $(this).parents('tr').find('.selectized').val();\n\n\t\t\t\tif (catField) {\n\t\t\t\t\t$('.' + groupId).parents('tr').find('select').each(function (i, v) {\n\t\t\t\t\t\t$(v).data('selectize').setValue(catField);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tvar value = $('#cat_mapping_'+catId).val();\n\t\t\t\t$('.'+groupId).parents('tr').find('input').val(value);\n\t\t\t}\n\n\t\t});\n\n    $(document).ready(function () {\n        var provider = $(\"#providers\").val();\n        var cat_init = new WooFeedFeedCategories();\n\n        if( \"facebook\" === provider ) {\n            cat_init.wooFeed_get_facebook_categories();\n        } else {\n            cat_init.wooFeed_get_google_categories();\n        }\n\n    });\n\n    /*\n    * Issue fix for feed edit page unsupported `Feed Type` not disabling\n    *\n    * @since 4.4.22\n    * */\n    $(document).on( \"feed_editor_init\", function(){\n\n        let types = $('.merchant-info-section.feed_file_type .data').html().split(\",\").map(function(t) {\n            return t.trim().toLowerCase();\n        });\n\n        let feedType = $(\"#feedType\");\n\n        if (types.length) {\n            feedType.find('option').each(function() {\n                let opt = $(this);\n                opt.val() && !helper.in_array(opt.val(), types) ? opt.disabled(!0) : opt.disabled(!1);\n            });\n            if (types.length === 1) feedType.find('option[value=\"' + types[0] + '\"]').attr('selected', 'selected');\n        } else feedType.find('option').disabled(!1);\n\n    } );\n\n    /**\n     * Automatically adding postfix for corresponding attribute selection.\n     *\n     * @since 4.4.32\n     */\n    $(document).on('ready', function(){\n\n        function update_postfix(){\n            var attribute_list = {\n\n                'price': wpf_ajax_obj.woocommerce.currency,\n                'current_price': wpf_ajax_obj.woocommerce.currency,\n                'sale_price': wpf_ajax_obj.woocommerce.currency,\n                'price_with_tax': wpf_ajax_obj.woocommerce.currency,\n                'current_price_with_tax': wpf_ajax_obj.woocommerce.currency,\n                'sale_price_with_tax': wpf_ajax_obj.woocommerce.currency,\n\n\n                'weight': wpf_ajax_obj.woocommerce.weight,\n                'weight_unit': wpf_ajax_obj.woocommerce.weight,\n\n\n                'height': wpf_ajax_obj.woocommerce.dimension,\n                'length': wpf_ajax_obj.woocommerce.dimension,\n                'width': wpf_ajax_obj.woocommerce.dimension\n\n            };\n\n            if (typeof wpf_ajax_obj.feed_rules !== 'undefined' && wpf_ajax_obj.feed_rules !== null) {\n                var feed_rules = wpf_ajax_obj.feed_rules;\n                var current_feed_currency = feed_rules.feedCurrency;\n            }\n\n            //get current action name of the page\n            var queryString = window.location.search;\n            var urlParams = new URLSearchParams(queryString);\n            var action = urlParams.get('action');\n\n            $( '.wf_attr.wf_attributes' ).each( function( key, value){\n\n                var attribute_value = $(value).val();\n                var current_Value = $( 'input[name^=\"suffix\"]' ).eq( parseInt( key ) ).val();\n\n                if( -1 !== $.inArray( current_Value, [\n                    ' ' +  wpf_ajax_obj.woocommerce.currency,\n                    ' ' + wpf_ajax_obj.woocommerce.weight,\n                    ' ' + wpf_ajax_obj.woocommerce.dimension\n                ] ) ){\n                    $( 'input[name^=\"suffix\"]' ).eq( parseInt( key ) ).val('');\n                }\n\n                $.each(attribute_list, function (_key, _value){\n                    if( attribute_value === _key ){\n                        _value = null !== current_feed_currency && \"undefined\" !== typeof current_feed_currency ? current_feed_currency : _value;\n\n                        if( \"undefined\" !== action && \"edit-feed\" !== action ) {\n                            $( 'input[name^=\"suffix\"]' ).eq( parseInt( key ) ).val( ' ' + _value );\n                        } else {\n                            $( 'input[name^=\"suffix\"]' ).eq( parseInt( key ) ).val( current_Value );\n                        }\n\n                    }\n                });\n            } );\n\n            $(document).trigger( 'feedEditor.after.free.postfix.update' );\n        }\n\n        $(document).on('feedEditor.init', function(){\n            update_postfix();\n        });\n\n    });\n\n})(jQuery, window, document, wp.ajax, wpf_ajax_obj);\n"]}